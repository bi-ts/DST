
//          Copyright Maksym V. Bilinets 2015 - 2016.
// Distributed under the Boost Software License, Version 1.0.
//      (See accompanying file LICENSE.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt )

#pragma once

#include <dst/binary_tree/initializer_tree.h>

#include <vector>

namespace dst_test
{

// Generate a Fibonacci tree.
// A Fibonacci tree is a binary tree of height h (h > 1), which has a Fibonacci
// tree of h - 1 height as its left sub-tree, and a Fibonacci tree of h - 2
// height as its right sub-tree. Binary trees of hight 0 and 1 are also
// Fibonacci trees.
dst::binary_tree::initializer_tree<int> generate_fibonacci_tree(std::size_t h);

// Generate all possible balanced binary trees of height h.
// A binary tree is balanced if the left and right subtrees of every node differ
// in height by no more than 1.
std::vector<dst::binary_tree::initializer_tree<int>>
generate_balanced_trees(std::size_t h);

// Number of binary trees, which will be generated by generate_balanced_trees
// function for height h.
std::size_t number_of_balanced_trees(std::size_t h);

} // dst_test
